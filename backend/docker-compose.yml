version: "3.8"
services:
  redis:
    container_name: redis
    image: redis:7.2.0
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
    env_file:
      - .env.docker
    networks:
      - fastapi-postgres-boilerplate

  database:
    container_name: postgres
    image: postgres:latest
    environment:
      - POSTGRES_DB=${POSTGRES_DB_NAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
      - .env.docker
    networks:
      - fastapi-postgres-boilerplate

  app:
    restart: always
    image: fastapi
    container_name: fastapi
    volumes:
      - ./app/:/fastapi-postgres-boilerplate/app
    build:
      context: .
      dockerfile: Dockerfile
    command: /start-reload.sh
    ports:
      - "8889:8888"
    env_file:
      - .env.docker
    depends_on:
      database:
        condition: service_healthy
    networks:
      - fastapi-postgres-boilerplate

  celery-worker:
    restart: always
    image: fastapi
    hostname: celery-worker-1
    volumes:
      - ./app/:/fastapi-postgres-boilerplate/app
    env_file:
      - .env.docker
    depends_on:
      redis:
        condition: service_healthy
    command: /worker-start.sh
    networks:
      - fastapi-postgres-boilerplate

networks:
  fastapi-postgres-boilerplate:
    name: fastapi-postgres-boilerplate
    driver: bridge
